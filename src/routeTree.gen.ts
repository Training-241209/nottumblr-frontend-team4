/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as AuthImport } from './routes/_auth'
import { Route as ProtectedDashboardRouteImport } from './routes/_protected/dashboard/route'
import { Route as AuthAuthRegisterImport } from './routes/_auth/auth/register'
import { Route as AuthAuthLoginImport } from './routes/_auth/auth/login'
import { Route as ProtectedDashboardTimelineRouteImport } from './routes/_protected/dashboard/timeline/route'
import { Route as ProtectedDashboardSettingsRouteImport } from './routes/_protected/dashboard/settings/route'
import { Route as ProtectedDashboardProfileRouteImport } from './routes/_protected/dashboard/profile/route'
import { Route as ProtectedDashboardExploreRouteImport } from './routes/_protected/dashboard/explore/route'
import { Route as ProtectedDashboardCommunitiesIndexImport } from './routes/_protected/dashboard/communities/index'
import { Route as ProtectedDashboardOtherProfileUsernameImport } from './routes/_protected/dashboard/other-profile/$username'
import { Route as ProtectedDashboardCommunitiesCommunityCommunityNameImport } from './routes/_protected/dashboard/communities/community/$communityName'

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedDashboardRouteRoute = ProtectedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ProtectedRoute,
} as any)

const AuthAuthRegisterRoute = AuthAuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAuthLoginRoute = AuthAuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => AuthRoute,
} as any)

const ProtectedDashboardTimelineRouteRoute =
  ProtectedDashboardTimelineRouteImport.update({
    id: '/timeline',
    path: '/timeline',
    getParentRoute: () => ProtectedDashboardRouteRoute,
  } as any)

const ProtectedDashboardSettingsRouteRoute =
  ProtectedDashboardSettingsRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => ProtectedDashboardRouteRoute,
  } as any)

const ProtectedDashboardProfileRouteRoute =
  ProtectedDashboardProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => ProtectedDashboardRouteRoute,
  } as any)

const ProtectedDashboardExploreRouteRoute =
  ProtectedDashboardExploreRouteImport.update({
    id: '/explore',
    path: '/explore',
    getParentRoute: () => ProtectedDashboardRouteRoute,
  } as any)

const ProtectedDashboardCommunitiesIndexRoute =
  ProtectedDashboardCommunitiesIndexImport.update({
    id: '/communities/',
    path: '/communities/',
    getParentRoute: () => ProtectedDashboardRouteRoute,
  } as any)

const ProtectedDashboardOtherProfileUsernameRoute =
  ProtectedDashboardOtherProfileUsernameImport.update({
    id: '/other-profile/$username',
    path: '/other-profile/$username',
    getParentRoute: () => ProtectedDashboardRouteRoute,
  } as any)

const ProtectedDashboardCommunitiesCommunityCommunityNameRoute =
  ProtectedDashboardCommunitiesCommunityCommunityNameImport.update({
    id: '/communities/community/$communityName',
    path: '/communities/community/$communityName',
    getParentRoute: () => ProtectedDashboardRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardRouteImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/dashboard/explore': {
      id: '/_protected/dashboard/explore'
      path: '/explore'
      fullPath: '/dashboard/explore'
      preLoaderRoute: typeof ProtectedDashboardExploreRouteImport
      parentRoute: typeof ProtectedDashboardRouteImport
    }
    '/_protected/dashboard/profile': {
      id: '/_protected/dashboard/profile'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof ProtectedDashboardProfileRouteImport
      parentRoute: typeof ProtectedDashboardRouteImport
    }
    '/_protected/dashboard/settings': {
      id: '/_protected/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof ProtectedDashboardSettingsRouteImport
      parentRoute: typeof ProtectedDashboardRouteImport
    }
    '/_protected/dashboard/timeline': {
      id: '/_protected/dashboard/timeline'
      path: '/timeline'
      fullPath: '/dashboard/timeline'
      preLoaderRoute: typeof ProtectedDashboardTimelineRouteImport
      parentRoute: typeof ProtectedDashboardRouteImport
    }
    '/_auth/auth/login': {
      id: '/_auth/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/auth/register': {
      id: '/_auth/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/_protected/dashboard/other-profile/$username': {
      id: '/_protected/dashboard/other-profile/$username'
      path: '/other-profile/$username'
      fullPath: '/dashboard/other-profile/$username'
      preLoaderRoute: typeof ProtectedDashboardOtherProfileUsernameImport
      parentRoute: typeof ProtectedDashboardRouteImport
    }
    '/_protected/dashboard/communities/': {
      id: '/_protected/dashboard/communities/'
      path: '/communities'
      fullPath: '/dashboard/communities'
      preLoaderRoute: typeof ProtectedDashboardCommunitiesIndexImport
      parentRoute: typeof ProtectedDashboardRouteImport
    }
    '/_protected/dashboard/communities/community/$communityName': {
      id: '/_protected/dashboard/communities/community/$communityName'
      path: '/communities/community/$communityName'
      fullPath: '/dashboard/communities/community/$communityName'
      preLoaderRoute: typeof ProtectedDashboardCommunitiesCommunityCommunityNameImport
      parentRoute: typeof ProtectedDashboardRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAuthLoginRoute: typeof AuthAuthLoginRoute
  AuthAuthRegisterRoute: typeof AuthAuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthLoginRoute: AuthAuthLoginRoute,
  AuthAuthRegisterRoute: AuthAuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ProtectedDashboardRouteRouteChildren {
  ProtectedDashboardExploreRouteRoute: typeof ProtectedDashboardExploreRouteRoute
  ProtectedDashboardProfileRouteRoute: typeof ProtectedDashboardProfileRouteRoute
  ProtectedDashboardSettingsRouteRoute: typeof ProtectedDashboardSettingsRouteRoute
  ProtectedDashboardTimelineRouteRoute: typeof ProtectedDashboardTimelineRouteRoute
  ProtectedDashboardOtherProfileUsernameRoute: typeof ProtectedDashboardOtherProfileUsernameRoute
  ProtectedDashboardCommunitiesIndexRoute: typeof ProtectedDashboardCommunitiesIndexRoute
  ProtectedDashboardCommunitiesCommunityCommunityNameRoute: typeof ProtectedDashboardCommunitiesCommunityCommunityNameRoute
}

const ProtectedDashboardRouteRouteChildren: ProtectedDashboardRouteRouteChildren =
  {
    ProtectedDashboardExploreRouteRoute: ProtectedDashboardExploreRouteRoute,
    ProtectedDashboardProfileRouteRoute: ProtectedDashboardProfileRouteRoute,
    ProtectedDashboardSettingsRouteRoute: ProtectedDashboardSettingsRouteRoute,
    ProtectedDashboardTimelineRouteRoute: ProtectedDashboardTimelineRouteRoute,
    ProtectedDashboardOtherProfileUsernameRoute:
      ProtectedDashboardOtherProfileUsernameRoute,
    ProtectedDashboardCommunitiesIndexRoute:
      ProtectedDashboardCommunitiesIndexRoute,
    ProtectedDashboardCommunitiesCommunityCommunityNameRoute:
      ProtectedDashboardCommunitiesCommunityCommunityNameRoute,
  }

const ProtectedDashboardRouteRouteWithChildren =
  ProtectedDashboardRouteRoute._addFileChildren(
    ProtectedDashboardRouteRouteChildren,
  )

interface ProtectedRouteChildren {
  ProtectedDashboardRouteRoute: typeof ProtectedDashboardRouteRouteWithChildren
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedDashboardRouteRoute: ProtectedDashboardRouteRouteWithChildren,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ProtectedRouteWithChildren
  '/dashboard': typeof ProtectedDashboardRouteRouteWithChildren
  '/dashboard/explore': typeof ProtectedDashboardExploreRouteRoute
  '/dashboard/profile': typeof ProtectedDashboardProfileRouteRoute
  '/dashboard/settings': typeof ProtectedDashboardSettingsRouteRoute
  '/dashboard/timeline': typeof ProtectedDashboardTimelineRouteRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/dashboard/other-profile/$username': typeof ProtectedDashboardOtherProfileUsernameRoute
  '/dashboard/communities': typeof ProtectedDashboardCommunitiesIndexRoute
  '/dashboard/communities/community/$communityName': typeof ProtectedDashboardCommunitiesCommunityCommunityNameRoute
}

export interface FileRoutesByTo {
  '': typeof ProtectedRouteWithChildren
  '/dashboard': typeof ProtectedDashboardRouteRouteWithChildren
  '/dashboard/explore': typeof ProtectedDashboardExploreRouteRoute
  '/dashboard/profile': typeof ProtectedDashboardProfileRouteRoute
  '/dashboard/settings': typeof ProtectedDashboardSettingsRouteRoute
  '/dashboard/timeline': typeof ProtectedDashboardTimelineRouteRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/dashboard/other-profile/$username': typeof ProtectedDashboardOtherProfileUsernameRoute
  '/dashboard/communities': typeof ProtectedDashboardCommunitiesIndexRoute
  '/dashboard/communities/community/$communityName': typeof ProtectedDashboardCommunitiesCommunityCommunityNameRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/_protected/dashboard': typeof ProtectedDashboardRouteRouteWithChildren
  '/_protected/dashboard/explore': typeof ProtectedDashboardExploreRouteRoute
  '/_protected/dashboard/profile': typeof ProtectedDashboardProfileRouteRoute
  '/_protected/dashboard/settings': typeof ProtectedDashboardSettingsRouteRoute
  '/_protected/dashboard/timeline': typeof ProtectedDashboardTimelineRouteRoute
  '/_auth/auth/login': typeof AuthAuthLoginRoute
  '/_auth/auth/register': typeof AuthAuthRegisterRoute
  '/_protected/dashboard/other-profile/$username': typeof ProtectedDashboardOtherProfileUsernameRoute
  '/_protected/dashboard/communities/': typeof ProtectedDashboardCommunitiesIndexRoute
  '/_protected/dashboard/communities/community/$communityName': typeof ProtectedDashboardCommunitiesCommunityCommunityNameRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/dashboard/explore'
    | '/dashboard/profile'
    | '/dashboard/settings'
    | '/dashboard/timeline'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/other-profile/$username'
    | '/dashboard/communities'
    | '/dashboard/communities/community/$communityName'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/dashboard'
    | '/dashboard/explore'
    | '/dashboard/profile'
    | '/dashboard/settings'
    | '/dashboard/timeline'
    | '/auth/login'
    | '/auth/register'
    | '/dashboard/other-profile/$username'
    | '/dashboard/communities'
    | '/dashboard/communities/community/$communityName'
  id:
    | '__root__'
    | '/_auth'
    | '/_protected'
    | '/_protected/dashboard'
    | '/_protected/dashboard/explore'
    | '/_protected/dashboard/profile'
    | '/_protected/dashboard/settings'
    | '/_protected/dashboard/timeline'
    | '/_auth/auth/login'
    | '/_auth/auth/register'
    | '/_protected/dashboard/other-profile/$username'
    | '/_protected/dashboard/communities/'
    | '/_protected/dashboard/communities/community/$communityName'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_protected"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/auth/login",
        "/_auth/auth/register"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/dashboard"
      ]
    },
    "/_protected/dashboard": {
      "filePath": "_protected/dashboard/route.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/dashboard/explore",
        "/_protected/dashboard/profile",
        "/_protected/dashboard/settings",
        "/_protected/dashboard/timeline",
        "/_protected/dashboard/other-profile/$username",
        "/_protected/dashboard/communities/",
        "/_protected/dashboard/communities/community/$communityName"
      ]
    },
    "/_protected/dashboard/explore": {
      "filePath": "_protected/dashboard/explore/route.tsx",
      "parent": "/_protected/dashboard"
    },
    "/_protected/dashboard/profile": {
      "filePath": "_protected/dashboard/profile/route.tsx",
      "parent": "/_protected/dashboard"
    },
    "/_protected/dashboard/settings": {
      "filePath": "_protected/dashboard/settings/route.tsx",
      "parent": "/_protected/dashboard"
    },
    "/_protected/dashboard/timeline": {
      "filePath": "_protected/dashboard/timeline/route.tsx",
      "parent": "/_protected/dashboard"
    },
    "/_auth/auth/login": {
      "filePath": "_auth/auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/auth/register": {
      "filePath": "_auth/auth/register.tsx",
      "parent": "/_auth"
    },
    "/_protected/dashboard/other-profile/$username": {
      "filePath": "_protected/dashboard/other-profile/$username.tsx",
      "parent": "/_protected/dashboard"
    },
    "/_protected/dashboard/communities/": {
      "filePath": "_protected/dashboard/communities/index.tsx",
      "parent": "/_protected/dashboard"
    },
    "/_protected/dashboard/communities/community/$communityName": {
      "filePath": "_protected/dashboard/communities/community/$communityName.tsx",
      "parent": "/_protected/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
