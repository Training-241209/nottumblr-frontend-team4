/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthAuthRegisterImport } from './routes/_auth/auth/register'
import { Route as AuthAuthLoginImport } from './routes/_auth/auth/login'

// Create/Update Routes

const AuthAuthRegisterRoute = AuthAuthRegisterImport.update({
  id: '/_auth/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthAuthLoginRoute = AuthAuthLoginImport.update({
  id: '/_auth/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth/auth/login': {
      id: '/_auth/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/auth/register': {
      id: '/_auth/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthRegisterImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
}

export interface FileRoutesByTo {
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/register': typeof AuthAuthRegisterRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth/auth/login': typeof AuthAuthLoginRoute
  '/_auth/auth/register': typeof AuthAuthRegisterRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/auth/login' | '/auth/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth/login' | '/auth/register'
  id: '__root__' | '/_auth/auth/login' | '/_auth/auth/register'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthAuthLoginRoute: typeof AuthAuthLoginRoute
  AuthAuthRegisterRoute: typeof AuthAuthRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthAuthLoginRoute: AuthAuthLoginRoute,
  AuthAuthRegisterRoute: AuthAuthRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth/auth/login",
        "/_auth/auth/register"
      ]
    },
    "/_auth/auth/login": {
      "filePath": "_auth/auth/login.tsx"
    },
    "/_auth/auth/register": {
      "filePath": "_auth/auth/register.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
